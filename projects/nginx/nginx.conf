#user  nobody;
daemon off;
master_process off;
worker_processes  1;
error_log  logs/error.log  debug;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout 65;

    appid_rule /usr/local/etc/rule.in;
    server {
        listen   8080;
        resolver 223.5.5.5;

        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;

        location / {
            proxy_pass http://$http_host$request_uri;
            #proxy_buffering off;
            proxy_buffers 8 32k;
            proxy_ignore_client_abort on;
            index  index.html index.htm;
            appid_scan on;
        }

        location /file/detectFileExists {
        	proxy_pass   http://localhost:8080;
	}
        location /upload/addfile/ {
        	proxy_pass   http://localhost:8080;
	}
        location /file/list {
        	proxy_pass   http://localhost:8080;
	}

        location /webupload {
        	proxy_pass   http://localhost:8080;
	}
        #location /webupload {
        #	upload_pass   @test;
	#       upload_store /tmp 1;
	#	upload_store_access user:r;
        #	upload_set_form_field "${upload_field_name}_name" $upload_file_name;
        #	upload_set_form_field "${upload_field_name}_content_type" $upload_content_type;
        #	upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;
        # 	Inform backend about hash and size of a file
        #	upload_aggregate_form_field "${upload_field_name}_md5" $upload_file_md5;
        #	upload_aggregate_form_field "${upload_field_name}_size" $upload_file_size;
        #	upload_pass_form_field "^submit$|^description$";
   	#}

     	# Pass altered request body to a backend
     	#location @test {
        #	proxy_pass   http://localhost:8080;
        #proxy_pass http://$http_host$request_uri;
     	#}
    }

    # HTTPS server
    #
    server {
        listen   443 ssl;
        resolver 223.5.5.5;
        server_name  $localhost;

        ssl_certificate      ca.cert;
        ssl_certificate_key  ca.cert;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass https://$http_host$request_uri;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
